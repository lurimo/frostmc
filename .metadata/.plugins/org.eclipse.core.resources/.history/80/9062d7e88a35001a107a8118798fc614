package br.com.frostmc.login.commands.player;

import java.util.Arrays;
import java.util.HashMap;
import java.util.UUID;

import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import br.com.frostmc.common.BukkitMain;
import br.com.frostmc.core.data.mysql.bukkit.AccountBukkit;
import br.com.frostmc.core.data.mysql.bukkit.authentication.Authentication;
import br.com.frostmc.core.util.Strings;
import br.com.frostmc.core.util.enums.AuthType;
import br.com.frostmc.login.FrostLogin;
import br.com.frostmc.login.commands.BaseCommand;
import br.com.frostmc.login.inventory.ManagerInventory;
import br.com.frostmc.login.scoreboard.Scoreboarding;

public class LoginCommand extends BaseCommand {

	public LoginCommand() {
		super("login", "login go to server", Arrays.asList("logar"));
	}
	
	public static HashMap<UUID, Integer> errors = new HashMap<UUID, Integer>();
	
	@Override
	public boolean execute(CommandSender commandSender, String label, String[] args) {
		if (isPlayer(commandSender)) {
			Player player = getPlayer(commandSender);
			AccountBukkit account = new AccountBukkit(player);
			Authentication authentication = account.getAuthentication();
			if (FrostLogin.checkToLogin.get(player.getUniqueId()).equals(AuthType.LOGGED)) {
				player.sendMessage("§c§lERRO §7Sua conta já está logada na rede.");
				return true;
			}
			if (args.length == 0) {
				if (BukkitMain.getPermissions().isTrial(player)) {
					player.sendMessage("§b§lLOGIN §7Utilize o comando: §a/login (senha) (codigo de segurança)");
				} else {
					player.sendMessage("§b§lLOGIN §7Utilize o comando: §a/login (senha)");
				}
				return true;
			}
			if (args.length == 1)  {
				if (!BukkitMain.getPermissions().isTrial(player)) {
					if(args[0].equalsIgnoreCase((String) authentication.getPassword())) {
						FrostLogin.checkToLogin.put(player.getUniqueId(), AuthType.LOGGED);
						authentication.setAuthType(AuthType.LOGGED);
						authentication.setIpAddrees(account.getGroups().getIpAddrees());
						authentication.save();
						ManagerInventory.sendItens(player);
						Scoreboarding.setScoreboard(player);
						player.sendMessage("§b§lLOGIN §7Você efetuou o login com sucesso.");
						player.sendMessage("§b§lLOGIN §7Utilize a bússola para entrar no lobby!");
						return true;
					} else {
						if (errors.get(player.getUniqueId()) == 3) {
							errors.remove(player.getUniqueId());
							player.kickPlayer("§3§lLOGIN" + "\n" + "\n" + "§fVocê errou sua senha mais de 3 vezes!" + "\n" + "§fEsqueceu sua senha? contate um Administrador." + "\n" + "\n" + "§3" + Strings.getWebsite());
							return true;
						}
						errors.put(player.getUniqueId(), errors.get(player.getUniqueId()) + 1);
						player.sendMessage("§3§lLOGIN §fSua senha está incorreta. Tente novamente.");
					}
				} else {
					player.sendMessage("§3§lLOGIN §fUtilize o comando: /login " + args[0] + " (codigo de segurança)");
					player.sendMessage("§3§lLOGIN §fDigite seu codigo de segurança.");
					return true;
				}
			}
			if (args.length == 2) {
				if (BukkitMain.getPermissions().isTrial(player)) {
					if (args[1].equalsIgnoreCase((String) authentication.getSecurityCode())) {
						if(args[0].equalsIgnoreCase((String) authentication.getPassword())) {
							FrostLogin.checkToLogin.put(player.getUniqueId(), AuthType.LOGGED);
							authentication.setAuthType(AuthType.LOGGED);
							authentication.setIpAddrees(account.getGroups().getIpAddrees());
							authentication.save();
							ManagerInventory.sendItens(player);
							Scoreboarding.setScoreboard(player);
							player.sendMessage("§3§lLOGIN §fSua conta foi logada com sucesso!");
							player.sendMessage("§3§lLOGIN §fClique na bússola para entrar no lobby!");
							return true;
						} else {
							if (errors.get(player.getUniqueId()) == 3) {
								errors.remove(player.getUniqueId());
								player.kickPlayer("§3§lLOGIN" + "\n" + "\n" + "§fVocê errou sua senha mais de 3 vezes!" + "\n" + "§fEsqueceu sua senha? contate um Administrador." + "\n" + "\n" + "§3" + Strings.getWebsite());
								return true;
							}
							errors.put(player.getUniqueId(), errors.get(player.getUniqueId()) + 1);
							player.sendMessage("§3§lLOGIN §fSua senha está incorreta. Tente novamente.");
						}
					} else {
						if (!args[1].contains("#")) {
							player.sendMessage("§3§lLOGIN §fVocê deve inserir o §a§lHASHTAG §fno começo do codigo. Exemplo: #12345");
							return true;
						} else {
							player.sendMessage("§3§lLOGIN §fSeu codigo de segurança está incorreto. Tente novamente.");
							return true;
						}
					}
				}
			}
		} else {
			return true;
		}
		return false;
	}


}
